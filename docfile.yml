# --- Performing multi-stage build to minimize resource ---

# --- The Builder (Install Python packages) ---
FROM python:3.13.2-slim AS builder

WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# --- The Final Runtime Image ---
FROM python:3.13.2-slim
# Install system libraries required by the browser (Playwright dependency)
RUN apt-get update && apt-get install -y --no-install-recommends \
    openssh-server \ 
    openssh-client \ 
    bash \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
WORKDIR /app

# Copy ONLY the installed Python packages from the builder stage
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
ENV PATH="/usr/local/bin:$PATH"

# This tells Playwright to install browsers into the system path, not a temporary home dir.
ENV PLAYWRIGHT_BROWSERS_PATH=/usr/local/lib/ms-playwright-browsers

RUN playwright install chromium && playwright install-deps && \
    chmod -R a+rX ${PLAYWRIGHT_BROWSERS_PATH}

RUN chown -R root:root ${PLAYWRIGHT_BROWSERS_PATH} && \
    chmod -R 755 ${PLAYWRIGHT_BROWSERS_PATH}

# Define the non-root user that n8n will use
ENV SSH_USER=n8n_user
ENV SSH_HOME=/home/$SSH_USER

# Switch to root user to install system packages and SSH
USER root

# 2. Setup SSH configuration for key-based authentication
# Create the SSH server directory and host keys
RUN mkdir -p /var/run/sshd && \
    ssh-keygen -A && \
    useradd -m -s /bin/bash ${SSH_USER} && \
    mkdir -p $SSH_HOME/.cache && \
    chown -R $SSH_USER:$SSH_USER $SSH_HOME/.cache && \
    mkdir -p $SSH_HOME/.ssh && \
    chown -R $SSH_USER:$SSH_USER $SSH_HOME && \
    echo "export PLAYWRIGHT_BROWSERS_PATH=/usr/local/lib/ms-playwright-browsers" >> $SSH_HOME/.bashrc && \
    chown $SSH_USER:$SSH_USER $SSH_HOME/.bashrc

# *IMPORTANT Copy the public key for authorized access
COPY n8n_ssh_key.pub $SSH_HOME/.ssh/authorized_keys
# Set correct, restrictive permissions on the public key file
RUN chmod 700 $SSH_HOME/.ssh && \
    chmod 600 $SSH_HOME/.ssh/authorized_keys && \
    chown $SSH_USER:$SSH_USER $SSH_HOME/.ssh/authorized_keys && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config && \
    echo "AllowUsers $SSH_USER" >> /etc/ssh/sshd_config

# Setup application directory (optional, but good practice)
RUN mkdir -p /app/scripts
COPY . /app

RUN echo '#!/usr/bin/env python3\nimport sys\nprint(f"Hello from Python: {sys.argv[1]}")' > /app/scripts/test.py
RUN chmod +x /app/scripts/test.py && \
    chmod 755 /app/bookstoscrape/bookstoscrape && \
    chown -R $SSH_USER:$SSH_USER /app

EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]